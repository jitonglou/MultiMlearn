% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rfcv2.R
\name{rfcv2}
\alias{rfcv2}
\title{Customized function for training random forest}
\usage{
rfcv2(type)
}
\arguments{
\item{type}{the type of the prediction problem.
One of \code{Regression} and \code{Classification}.}
}
\value{
A function to be used in the \code{train} function of the \code{caret} package.
}
\description{
\code{rfcv2} creates a random forest model which has both
\code{mtry} and \code{ntree} as tuning parameters for cross-validations.
This function is an extension to random forest models that are currently
supported by the \code{train} function of the \code{caret} package as all of those
models just use \code{mtry}.
}
\examples{
library(caret)
library(randomForest)
library(mlbench)

#######################################
## Classification Example
data(iris)

set.seed(0)
rf_class_fit = train(Species ~ .,
                     data=iris,
                     method=rfcv2("Classification"),
                     tuneGrid=expand.grid(
                       .mtry=seq(1,ncol(iris)-1, 1),
                       .ntree=seq(100,500,100)),
                     trControl=trainControl(method="cv"))
print(rf_class_fit)

#######################################
## Regression Example
data(BostonHousing)

set.seed(0)
rf_reg_fit = train(medv ~ .,
                   data = BostonHousing,
                   method=rfcv2("Regression"),
                   tuneGrid=expand.grid(
                     .mtry=seq(1,sqrt(ncol(BostonHousing)-1), 1),
                     .ntree=seq(100,500,100)),
                   trControl=trainControl(method="cv"))
print(rf_reg_fit)

}
